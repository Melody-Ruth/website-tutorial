{"version":3,"sources":["logo.svg","components/About.jsx","components/Critique.jsx","components/Tutorial/TutorialDrawerElement.jsx","components/Tutorial/TutorialDrawer.jsx","components/Tutorial/SandBox.jsx","components/Tutorial/Step1.jsx","components/Tutorial/SandBox2.jsx","components/Tutorial/Step2.jsx","components/Tutorial/Step3.jsx","components/Tutorial/Tutorial.jsx","components/Links.jsx","components/NavBar.jsx","components/myTheme.jsx","App.js","reportWebVitals.js","index.js"],"names":["About","className","Typography","variant","color","sx","mb","id","class","Link","href","Divider","Critique","TutorialDrawerElement","props","ListItem","button","onClick","clickFunction","ListItemText","primary","name","expanded","subSteps","map","text","index","scrollFunction","bgcolor","grey","TutorialDrawer","useState","steps","useRef","Card","borderRadius","List","step","selectedId","SandBox","pValue","setPValue","pDisplayValue","setPDisplayValue","pError","setPError","pErrorText","setPErrorText","checkFormatError","startTags","inUse","Map","set","temp","indexOf","length","console","log","substring","charAt","pop","has","get","push","useEffect","TextField","value","error","onChange","e","target","newP","replace","width","size","generalText","depth","tagStart","search","tagEnd","Step1","ref1","React","createRef","ref2","stepRefs","setStepRefs","tempList","current","undefined","setRefs","ref","SandBox2","srcValue","setSrcValue","widthValue","setWidthValue","heightValue","setHeightValue","srcError","setSrcError","srcErrorText","setSrcErrorText","widthError","setWidthError","widthErrorText","setWidthErrorText","heightError","setHeightError","heightErrorText","setHeightErrorText","regex","RegExp","test","src","height","Step2","ref3","ref4","Step3","Tutorial","component","refs","selectedStep","setSelectedStep","changeStep","newId","stepNum","scrollIntoView","behavior","cloneElement","newRefs","Links","NavBar","AppBar","position","Toolbar","Button","to","myTheme","createTheme","palette","main","cyan","contrastText","secondary","App","ThemeProvider","theme","path","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.589165c0.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react';\r\nimport Typography from '@mui/material/Typography';\r\nimport '../App.css';\r\nimport './Tutorial/Tutorial.css';\r\nimport { Divider, Link } from '@mui/material';\r\n\r\nconst About = () => {\r\n    return (\r\n      <div className=\"pContainer\">\r\n          <Typography variant=\"h4\" color=\"secondary.dark\" sx={{ mb: \"0.8em\"}}>\r\n          Welcome!\r\n          </Typography>\r\n          <div id=\"1.1\" className=\"miniStep\">\r\n            <Typography variant=\"h5\" color=\"primary\">\r\n            About the tutorial\r\n            </Typography>\r\n            <div class=\"stepParagraph\">\r\n                <Typography variant=\"p\">\r\n                Have you been thinking about learning web development?\r\n                Maybe you need to make a website for a job, a class, or an organization, or maybe you’re just trying to learn a new skill. \r\n                Either way, this website is designed to help you get started making websites with HTML and CSS. \r\n                If you follow all of the steps, by the end of the tutorial you will have an ocean-themed website with text and images arranged according to a custom layout.\r\n                 If this is your first time programming with HTML and CSS, start with <Link href='/website-tutorial/'>step 1 of the tutorial</Link> and follow along.\r\n                 If you already have a bit of experience, you can also hop in anywhere and use the steps independently.\r\n                 Once you’ve learned everything the tutorial has to offer, check out <Link href='/website-tutorial/links'>Resources</Link> for some recommended websites to help you learn more advanced topics.</Typography>\r\n            </div>\r\n          </div>\r\n          <Divider/>\r\n          <div id=\"1.2\" className=\"miniStep\">\r\n            <Typography variant=\"h5\" color=\"primary\">\r\n            About the site\r\n            </Typography>\r\n            <div class=\"stepParagraph\">\r\n                <Typography variant=\"p\">\r\n                This website was created using HTML, CSS, JavaScript, React.js, and Material-UI. \r\n                React.js is a JavaScript framework, meaning it is built with and fits into JavaScript, providing pre-packaged functionality to streamline the programming process. \r\n                React.js provides tools to help with managing the state of websites and breaking code up into modular pieces, called components. \r\n                Material-UI is a React library that provides tools for styling and specific components that are common in modern websites. \r\n                This tutorial focuses only on HTML and CSS since learning all of these languages/frameworks/libraries at once would over-complicate what is meant to be an introductory tutorial. \r\n                Everything in the tutorial is still applicable to programs that also JavaScript, React.js, and/or Material-UI. \r\n                In fact, doing a few full projects with just HTML, CSS, and JavaScript will give you skills that will be useful on harder React projects when more complicated functionality is required.\r\n                 Once you have some experience first with just HTML and CSS, then with HTML, CSS, and JavaScript, React is a great skill to learn. \r\n                 Some of the pages linked in <Link href='/website-tutorial/links'>Resources</Link> are React tutorials. \r\n                 If you want to see how this website specifically is made, you can find the code in the <Link href='https://github.com/Melody-Ruth/website-tutorial'>Github repository</Link>.\r\n                </Typography>\r\n            </div>\r\n          </div>\r\n          <Divider/>\r\n          <div id=\"1.3\" className=\"miniStep\">\r\n            <Typography variant=\"h5\" color=\"primary\">\r\n            About the creator\r\n            </Typography>\r\n            <div class=\"stepParagraph\">\r\n                <Typography variant=\"p\">\r\n                Melody Ruth is currently studying computer science at UC San Diego, where she is also doing research on sampling strategies for graphics application.\r\n                 She got started with web development seven years ago and has experience with HTML, CSS, JavaScript, React.js, Material-UI, and Vue.js. \r\n                A selection of the projects she’s done can be found on her <Link href='https://melody-ruth.github.io/portfolio2/'>portfolio website</Link> or <Link href='https://melody-ruth.github.io/portfolio2/'>Github</Link>. \r\n                Her teaching experience includes tutoring at the San Diego City College Math Center, teaching campers programming as a ThoughtSTEM summer intern, and volunteering at the San Diego Public Library Homework Help Center.\r\n                 For professional inquiries, contact Melody either through <Link href='https://www.linkedin.com/in/melodyruth/'>Linkedin messaging</Link> or through <Link href='https://melody-ruth.github.io/portfolio2/contact'>her website</Link>.\r\n                </Typography>\r\n            </div>\r\n          </div>\r\n        </div>\r\n    )\r\n  }\r\n  \r\n  export default About;","import React from 'react';\r\nimport Typography from '@mui/material/Typography';\r\nimport '../App.css';\r\n\r\nconst Critique = () => {\r\n    return (\r\n      <div className=\"pContainer\">\r\n        <Typography variant=\"h4\" color=\"secondary.dark\" sx={{ mb: \"0.8em\"}}>\r\n        Who should learn to code?\r\n        </Typography>\r\n        <div class=\"stepParagraph\">\r\n          <Typography variant=\"p\">\r\n          In “Please don’t learn to code,” Basel Farag argues that the recent push to encourage everyone to learn to code is harmful because it sells the public on an idealized version of the software engineering career path. Farag first paints a picture of the forces encouraging everyone to follow this path, from politicians to non-profits to bootcamps. Farag criticizes bootcamps for overselling their product and public figures for encouraging people to pursue coding. Farag uses personal anecdotes to explain the difficulties of the software engineering career path, and argues that although it is a legitimate path it is not the best one for many people who are being urged to pursue it.\r\n          </Typography>\r\n        </div>\r\n        <div class=\"stepParagraph\">\r\n          <Typography variant=\"p\">\r\n          I agree with Farag’s arguments that the software engineering field isn’t for everyone, but I think a better distinction needs to be made between “learning to code” and “becoming a software engineer.” In order to become a software engineer you must first learn to code, but learning to code can still be useful outside of following a software engineering career path. Farag conflates “learning to code” and “becoming a software engineer.” In the opening of the article he cites the “Learn to Code” movement, including Code.org as “evangelizing what they view as a necessary skill for tomorrow’s workforce.” Code.org’s mission, per their website, is to “expand access to computer science in schools and increase participation by young women and students from other underrepresented groups.” Based on the rest of the article, Farag is arguing against the position that everyone should strongly consider going to a bootcamp or otherwise becoming software engineer, but Code.org simply wants to expose K-12 students to a potential career path that they might not otherwise have gotten to try. Students already learn many skills that aren’t applicable to all careers. Besides ignoring the distinction between adults switching careers and children getting exposed to a new skill, Farag ignores the possibility of coding being useful for adults who don’t enter the software industry. “I would no more urge everyone to learn to program then I would urge everyone to learn to plumb,” he writes, but his metaphor can also argue against him: basic knowledge of sink plumbing can help people avoid the expense of a plumber.\r\n          </Typography>\r\n        </div>\r\n        <div class=\"stepParagraph\">\r\n          <Typography variant=\"p\">\r\n          Despite my disagreements, I think “Please don’t learn to code” is a valuable article because it offers a counter balance to the sometimes overwhelming campaign to teach absolutely everyone how to program. Farag has great arguments for why not everyone should become a software engineer, and even on the level of learning to code I agree that “Coding is not the new literacy.” In the context of this tutorial, this means I can’t universally recommend it as the best way to make a web page (look into Wordpress, Wix, Squarespace, etc before deciding to use HTML and CSS), and I certainly can’t recommend it as the best way to start a new career path. However, I think that coding is a rewarding way to engage with the digital world, an exciting challenge to develop your mind, and a useful skill for many careers. Coding isn’t universally applicable, but it is an amazing tool to have in your tool belt.\r\n          </Typography>\r\n        </div>\r\n        <div class=\"stepParagraph\">\r\n          <Typography variant=\"p\">\r\n          Farag, Basel. “Please Don’t Learn to Code.” Tech Crunch, 10 May 2016, https://techcrunch.com/2016/05/10/please-dont-learn-to-code/. \r\n          </Typography>\r\n        </div>\r\n        \r\n      </div>\r\n    )\r\n  }\r\n  \r\n  export default Critique;","import React, { useState } from 'react';\r\nimport Card from '@mui/material/Card';\r\nimport List from '@mui/material/List';\r\nimport ListItem from '@mui/material/ListItem';\r\nimport Typography from '@mui/material/Typography';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport { grey } from '@mui/material/colors';\r\nimport '../../App.css';\r\nimport './Tutorial.css';\r\n\r\nconst TutorialDrawerElement = (props) => {\r\n    //const [selected, setSelected] = useState(false);\r\n    const handleClick = () => {\r\n        props.clickFunction(props.id);\r\n    }\r\n    return (\r\n        <div>\r\n            <ListItem button onClick={handleClick}>\r\n                <ListItemText primary={props.name} />\r\n            </ListItem>\r\n            {props.expanded ?\r\n                props.subSteps.map((text, index) => (\r\n                <ListItem button onClick={() => props.scrollFunction(index,index)} id={index} sx={{bgcolor: grey[300]}}>\r\n                    <ListItemText primary={text} />\r\n                </ListItem>)) : <div></div>\r\n            }\r\n        </div>\r\n    )\r\n  }\r\n  \r\n  export default TutorialDrawerElement;","import React, { useState, useRef } from 'react';\r\nimport Card from '@mui/material/Card';\r\nimport List from '@mui/material/List';\r\nimport ListItem from '@mui/material/ListItem';\r\nimport Typography from '@mui/material/Typography';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport TutorialDrawerElement from './TutorialDrawerElement';\r\nimport '../../App.css';\r\nimport './Tutorial.css';\r\n\r\nconst TutorialDrawer = (props) => {\r\n    const [steps, setSteps] = useState([\r\n        {text: 'Step 1: Hello, World!', steps: ['1.1 Your first website', '1.2 Anatomy of an HTML file']},\r\n        {text: 'Step 2: Text, Links, and Images', steps: ['2.1 Text tags', '2.2 Attributes', '2.3 Images', '2.4 Links']},\r\n        {text: 'Step 3: Styling with CSS', steps: ['3.1 Adding CSS','3.2 Font and Color','3.3 Divs','3.4']}\r\n    ]);\r\n    const myRef = useRef(null);\r\n    const executeScroll = () => {\r\n        myRef.current.scrollIntoView();\r\n    }\r\n    return (\r\n        <Card\r\n            id=\"tutorialDrawer\"\r\n            sx={{ borderRadius: 0 }}\r\n        >\r\n            <List>\r\n            {/*['Step 1: Hello, World!', 'Step 2: Links and Images', 'Step 3: Divs and Positioning'].map((text, index) => (\r\n                <TutorialDrawerElement name={text} id={index} expanded={props.selectedId==index} clickFunction={props.clickFunction}/>\r\n            ))*/}\r\n            {steps.map((step, index) => (\r\n                <TutorialDrawerElement name={step.text} id={index} expanded={props.selectedId==index} clickFunction={props.clickFunction} scrollFunction={props.scrollFunction} subSteps={step.steps}/>\r\n            ))}\r\n            </List>\r\n        </Card>\r\n    )\r\n  }\r\n  \r\n  export default TutorialDrawer;","import React, { useState, useEffect, useRef } from 'react';\r\nimport Card from '@mui/material/Card';\r\nimport TextField from '@mui/material/TextField';\r\nimport '../../App.css';\r\nimport './Tutorial.css';\r\nimport './SandBox.css';\r\n\r\nconst SandBox = (props) => {\r\n    //const [builtInCode, setBuiltCode]\r\n    const [pValue, setPValue] = useState('Try writing something here!');\r\n    const [pDisplayValue, setPDisplayValue] = useState('Try writing something here!');\r\n    const [pError, setPError] = useState(false);\r\n    const [pErrorText, setPErrorText] = useState(\"\");\r\n    const checkFormatError = (text) => {\r\n        var startTags = [];\r\n        var inUse = new Map();\r\n        inUse.set('b',false);\r\n        inUse.set('u',false);\r\n        inUse.set('i',false);\r\n        var temp = text.indexOf('<');\r\n        if (temp === text.length-1) {\r\n            console.log(1);\r\n            return \"Error: Incomplete Tag\";\r\n        }\r\n        //console.log(\"Start\");\r\n        while (temp != -1) {\r\n            console.log(text.substring(temp));\r\n            if (text.charAt(temp+1) === '/') {\r\n                //closing tag\r\n                if (temp > text.length-4) {\r\n                    return \"Error: Incomplete tag\";\r\n                } else if (text.charAt(temp+3) !== '>') {\r\n                    return \"Error: Incomplete or unknown tag\";\r\n                } else if (startTags.length === 0) {\r\n                    return \"Error: Closing tag before opening tag\";\r\n                } else if (text.charAt(temp+2) !== startTags.pop()) {\r\n                    return \"Error: Closing tag doesn't match most recent opening tag\";\r\n                } else if (!inUse.has(text.charAt(temp+2))) {\r\n                    return \"Error: Unknown tag\";\r\n                } else {\r\n                    inUse.set(text.charAt(temp+2),false);\r\n                }\r\n            } else {\r\n                //opening tag\r\n                if (temp > text.length-3) {\r\n                    return \"Error: Incomplete tag\";\r\n                } else if (text.charAt(temp+2) !== '>') {\r\n                    return \"Error: Incomplete or unknown tag\";\r\n                } else if (inUse.get(text.charAt(temp+1))) {\r\n                    return \"Error: Nested tags of the same type\";\r\n                } else if (!inUse.has(text.charAt(temp+1))) {\r\n                    return \"Error: Unknown Tag\";\r\n                } else {\r\n                    inUse.set(text.charAt(temp+1),true);\r\n                    startTags.push(text.charAt(temp+1));\r\n                }\r\n            }\r\n            temp = text.indexOf('<',temp+1);\r\n        }\r\n        if (startTags.length != 0) {\r\n            console.log(4);\r\n            return \"Error: Unclosed tag\";\r\n        }\r\n        return \"\";\r\n    }\r\n    const updateInput = (e) => {\r\n        setPValue(e.target.value);\r\n        let newP = e.target.value.replace(/<br>/g,\"\\n\");\r\n        setPDisplayValue(newP);\r\n\r\n        /*newP = newP.replace(/<b>|<\\/b>/g,\"\");\r\n        newP = newP.replace(/<i>|<\\/i>/g,\"\");\r\n        newP = newP.replace(/<u>|<\\/u>/g,\"\");\r\n        setPError(newP.includes('<') || newP.includes('>'));*/\r\n        setPError(checkFormatError(newP).length !== 0);\r\n        setPErrorText(checkFormatError(newP));\r\n    }\r\n    useEffect(() => {  \r\n        //setPDisplayValue(pValue.replace(\"<br>\",\"\\n\"));\r\n    }, [pValue]);\r\n    const generalText = (text, depth) => {\r\n        var tagStart = text.search(/<.>/);\r\n        var tagEnd = -1;\r\n        if (tagStart != -1) {\r\n            tagEnd = text.indexOf(\"/\"+text.charAt(tagStart+1)+\">\");\r\n        }\r\n        console.log(text);\r\n        console.log(tagStart);\r\n        console.log(tagEnd);\r\n        if (depth > 4) {\r\n            return (\r\n                <span>\r\n                    {text}\r\n                </span>\r\n            ); \r\n        }\r\n        if (tagStart === -1 || tagEnd === -1) {\r\n            return (\r\n                <span>\r\n                    {text}\r\n                </span>\r\n            ); \r\n        } else {\r\n            if (text.charAt(tagStart+1) === 'b') {\r\n                return (\r\n                    <span>\r\n                        {text.substring(0,tagStart)}\r\n                        <b>{generalText(text.substring(tagStart+3,tagEnd-1),depth+1)}</b>\r\n                        {generalText(text.substring(tagEnd+3),depth+1)}\r\n                    </span>\r\n                )\r\n            } else if (text.charAt(tagStart+1) === 'u') {\r\n                return (\r\n                    <span>\r\n                        {text.substring(0,tagStart)}\r\n                        <u>{generalText(text.substring(tagStart+3,tagEnd-1),depth+1)}</u>\r\n                        {generalText(text.substring(tagEnd+3),depth+1)}\r\n                    </span>\r\n                )\r\n            } else {\r\n                return (\r\n                    <span>\r\n                        {text.substring(0,tagStart)}\r\n                        <i>{generalText(text.substring(tagStart+3,tagEnd-1),depth+1)}</i>\r\n                        {generalText(text.substring(tagEnd+3),depth+1)}\r\n                    </span>\r\n                )\r\n            }\r\n        }\r\n        return (\r\n            <span>\r\n                {text}\r\n            </span>\r\n        );\r\n    }\r\n    /*const BoldedText = (text) => {\r\n        const textArray = text.split(/<b>|<\\/b>/);\r\n        console.log(\"Bold level: \");\r\n        console.log(textArray);\r\n        return (\r\n          <span>\r\n            {textArray.map((item, index) => (\r\n                index % 2 == 0 ? ItalicText(item) : <b>{ItalicText(item)}</b>\r\n            ))}\r\n          </span>\r\n        );\r\n    }\r\n    const ItalicText = (text) => {\r\n        const textArray = text.split(/<i>|<\\/i>/);\r\n        console.log(\"Italic level: \");\r\n        console.log(textArray);\r\n        return (\r\n          <span>\r\n            {textArray.map((item, index) => (\r\n                index % 2 == 0 ? UnderlineText(item) : <i>{UnderlineText(item)}</i>\r\n            ))}\r\n          </span>\r\n        );\r\n    }\r\n    const UnderlineText = (text) => {\r\n        const textArray = text.split(/<u>|<\\/u>/);\r\n        console.log(\"Underline level level: \");\r\n        console.log(textArray);\r\n        return (\r\n          <span>\r\n            {textArray.map((item, index) => (\r\n                index % 2 == 0 ? item : <u>{item}</u>\r\n            ))}\r\n          </span>\r\n        );\r\n    }*/\r\n    return (\r\n        <Card id=\"cardContainer\">\r\n            <div id=\"container\">\r\n            <div id=\"codeInput\">\r\n                <p className=\"codeInputText\">\r\n                    &lt;!DOCTYPE html&gt;<br/>\r\n                    &lt;html lang=\"en\"&gt;<br/>\r\n                    &emsp;&lt;head&gt;<br/>\r\n                    &emsp;&emsp;&lt;title&gt;First website&lt;/title&gt;<br/>\r\n                    &emsp;&lt;head/&gt;<br/>\r\n                    &emsp;&lt;body&gt;<br/>\r\n                    &emsp;&emsp;&lt;p&gt;\r\n                </p>\r\n                <TextField\r\n                    value={pValue} error={pError} onChange={updateInput} variant=\"standard\" sx={{width: '65%'}} className=\"codeInputText\" id=\"changeableCode\" size=\"string\">\r\n                </TextField>\r\n                <p className=\"codeInputText\">\r\n                    &lt;/p&gt; <br/>\r\n                    &emsp;&lt;body/&gt; <br/>\r\n                    &lt;html/&gt;\r\n                </p>\r\n            </div>\r\n            <div id=\"result\">\r\n                {pError ? <p id=\"errorText\">{pErrorText}</p> : generalText(pDisplayValue,0)}\r\n            </div>\r\n            </div>\r\n            <p>Edit the text between the &lt;p&gt; and &lt;/p&gt; on the left and see the result generated on the right change</p>\r\n        </Card>\r\n    )\r\n  }\r\n  \r\n  export default SandBox;","import React, { useState, useEffect, useRef } from 'react';\r\nimport Card from '@mui/material/Card';\r\nimport List from '@mui/material/List';\r\nimport ListItem from '@mui/material/ListItem';\r\nimport Typography from '@mui/material/Typography';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport '../../App.css';\r\nimport './Tutorial.css';\r\nimport { Divider } from '@mui/material';\r\nimport SandBox from './SandBox';\r\n\r\nconst Step1 = (props) => {\r\n    const ref1 = React.createRef();\r\n    const ref2 = React.createRef();\r\n    const [stepRefs, setStepRefs] = useState([]);\r\n    useEffect(() => {\r\n        //console.log(ref1);\r\n        var tempList = [];\r\n        tempList[0] = ref1.current;\r\n        tempList[1] = ref2.current;\r\n        setStepRefs(tempList);\r\n    }, []);\r\n    useEffect(() => {\r\n        //console.log(ref1);\r\n        //console.log(\"Should be set now: \"+stepRefs[0]);\r\n        if (typeof(stepRefs[0]) != undefined) {\r\n            //console.log(\"hello??\");\r\n            props.setRefs(stepRefs);\r\n        }\r\n    }, [stepRefs]);\r\n    return (\r\n        <div className=\"pContainer stepContainer\">\r\n          <Typography variant=\"h4\" color=\"secondary.dark\" sx={{ mb: \"0.8em\"}}>\r\n          Step 1: Hello, World!\r\n          </Typography>\r\n          <div id=\"1.1\" className=\"miniStep\" ref={ref1}>\r\n            <Typography variant=\"h5\" color=\"primary\">\r\n            1.1 Your first website\r\n            </Typography>\r\n            <div class=\"stepParagraph\">\r\n                <Typography variant=\"p\">\r\n                Welcome to the tutorial! If you follow these steps in order you will learn how to make your own website with HTML and CSS.\r\n                The tutorial examples will create an ocean-themed website, but you can make a site themed around anything you'd like using the same steps.\r\n                In this first step, we'll create an HTML file, add text to it, and see what it looks like in a browser.</Typography>\r\n            </div>\r\n            <div class=\"stepParagraph\">\r\n                <Typography variant=\"p\">\r\n                First, a bit of context. No matter how fancy a website is or how it was created, underneath it will be made up of HTML code.\r\n                If you right click on any page and select \"Inspect\" you can see the underlying HTML code and how it corresponds to the elements of the page.\r\n                (Websites can change what happens when you right click, so this won't work 100% of the time, but they will still have an HTML file)\r\n                CSS code is used to add styling to websites, including colors, fonts, and complicated layouts. \r\n                JavaScript code is used to add interactivity, from simple button features to complex server communication.\r\n                If you've made a website with Wordpress, Squarespace, etc, underneath it was HTML, CSS, and JavaScript.\r\n                Any features they offered can be recreated with HTML, CSS, and JavaScript, and using the underlying languages gives you more freedom.\r\n                In this tutorial we'll learn the basics of HTML and CSS.\r\n                </Typography>\r\n            </div>\r\n          </div>\r\n          <Divider/>\r\n          <div id=\"1.2\" className=\"miniStep\"  ref={ref2}>\r\n            <Typography variant=\"h5\" color=\"primary\">\r\n            1.2 Anatomy of an HTML file\r\n            </Typography>\r\n            <div class=\"stepParagraph\">\r\n                <Typography variant=\"p\">\r\n                We'll start with a simple HTML file that will tell the browser to display some text.\r\n                Every HTML file follows a particular format, so for such a simple website most of the HTML code will be standard code that you'll find in virtually every HTML file.\r\n                </Typography>\r\n                <Card id=\"exampleContainer\">\r\n                <div class=\"codeExample\">\r\n                    <p className=\"codeExampleText\">\r\n                        &lt;!DOCTYPE html&gt;<br/>\r\n                        &lt;html lang=\"en\"&gt;<br/>\r\n                            &emsp;&lt;head&gt;<br/>\r\n                                &emsp;&emsp;&lt;title&gt;Tab title to display in browser&lt;/title&gt;<br/>\r\n                            &emsp;&lt;/head&gt;<br/>\r\n                            &emsp;&lt;body&gt;<br/>\r\n                            &emsp;&emsp;&lt;p&gt;Hello, world!&lt;/p&gt;<br/>\r\n                            &emsp;&lt;/body&gt;<br/>\r\n                        &lt;/html&gt;<br/>\r\n                    </p>\r\n                </div>\r\n                <Typography variant=\"p\" id=\"exampleLabel\">\r\n                A simple example HTML file\r\n                </Typography>\r\n                </Card>\r\n            </div>\r\n            <div class=\"stepParagraph\">\r\n                <Typography variant=\"p\">\r\n                    HTML files are made of nested tags (the things in &lt; &gt;). \r\n                    Some tags will have a starting \"open\" tag of the form &lt;tag&gt; and an ending \"closing\" tag of the form &lt;/tag&gt; \r\n                    with content in between, while others will just have one tag of the form &lt;tag&gt;.\r\n                    The &lt;!DOCTYPE html&gt; says that this file will consist of HTML code.\r\n                    (If you've seen an html file that starts with something different after the !DOCTYPE, it was probably using an older version of HTML.\r\n                    We'll be using the HTML5, which is the latest version)\r\n                    All of the html code will be contained with &lt;html&gt; tags, and it will be broken up into a \"head\" and a \"body\".\r\n                    Information about the website, non-HTML code, and references to other files will go between the &lt;head&gt; and &lt;/head&gt;.\r\n                    The content we want to display on the website will go between the &lt;body&gt; and &lt;/body&gt;.\r\n                    In this case, we want to display the text \"Hello, world!\" (a common first task when learning a new type of programming).\r\n                    This is accomplished using the &lt;p&gt; (as in paragraph) tag, with the text content we want to display put in between the opening and closing p tags.\r\n                </Typography>\r\n            </div>\r\n            <div class=\"stepParagraph\">\r\n                <Typography variant=\"p\">\r\n                    If we put this code into a ____.html file (any name will work for our current purposes as long as the file is of type HTML) \r\n                    and open it in a browser (either by double-clicking on the file or using the right click menu from a file explorer),\r\n                    it will open up a new tab which will display the text \"Hello, world!\". You can copy and paste the code to try it for yourself!\r\n                    (Note that editing the file won't immediately affect the page; you'll have to save the file and reload the tab to see the updates.)\r\n                </Typography>\r\n            </div>\r\n          </div>\r\n        </div>\r\n    )\r\n  }\r\n  \r\n  export default Step1;","import React, { useState, useEffect, useRef } from 'react';\r\nimport Card from '@mui/material/Card';\r\nimport TextField from '@mui/material/TextField';\r\nimport '../../App.css';\r\nimport './Tutorial.css';\r\nimport './SandBox.css';\r\n\r\nconst SandBox2 = (props) => {\r\n    //const [builtInCode, setBuiltCode]\r\n    const [srcValue, setSrcValue] = useState('\"https://upload.wikimedia.org/wikipedia/commons/thumb/d/d9/Gfp-florida-daytona-beach-beach-shoreline.jpg/1200px-Gfp-florida-daytona-beach-beach-shoreline.jpg\"');\r\n    const [widthValue, setWidthValue] = useState(300);\r\n    const [heightValue, setHeightValue] = useState(150);\r\n    const [srcError, setSrcError] = useState(false);\r\n    const [srcErrorText, setSrcErrorText] = useState(\"\");\r\n    const [widthError, setWidthError] = useState(false);\r\n    const [widthErrorText, setWidthErrorText] = useState(\"\");\r\n    const [heightError, setHeightError] = useState(false);\r\n    const [heightErrorText, setHeightErrorText] = useState(\"\");\r\n    const updateInput = (e) => {\r\n        setSrcValue(e.target.value);\r\n        setSrcError(e.target.value.length < 2 || e.target.value.charAt(0) != '\"' || e.target.value.charAt(e.target.value.length-1) != '\"');\r\n        if (e.target.value.length < 2 || e.target.value.charAt(0) != '\"' || e.target.value.charAt(e.target.value.length-1) != '\"') {\r\n            setSrcErrorText(\"Image source locations must be in quotes\")\r\n        } else {\r\n            setSrcErrorText(\"\");\r\n        }\r\n    }\r\n    const updateInput2 = (e) => {\r\n        setWidthValue(e.target.value);\r\n        let regex = new RegExp('^[0-9]*$');\r\n        setWidthError(!regex.test(e.target.value));\r\n        if (!regex.test(e.target.value)) {\r\n            setWidthErrorText(\"Width must be a positive integer\")\r\n        } else {\r\n            setWidthErrorText(\"\");\r\n        }\r\n    }\r\n    const updateInput3 = (e) => {\r\n        setHeightValue(e.target.value);\r\n        let regex = new RegExp('^[0-9]*$');\r\n        setHeightError(!regex.test(e.target.value));\r\n        if (!regex.test(e.target.value)) {\r\n            setHeightErrorText(\"Height must be a positive integer\")\r\n        } else {\r\n            setHeightErrorText(\"\");\r\n        }\r\n    }\r\n    return (\r\n        <Card id=\"cardContainer\">\r\n            <div id=\"container\">\r\n            <div id=\"codeInput\">\r\n                <p className=\"codeInputText\">\r\n                    &lt;!DOCTYPE html&gt;<br/>\r\n                    &lt;html lang=\"en\"&gt;<br/>\r\n                    &emsp;&lt;head&gt;<br/>\r\n                    &emsp;&emsp;&lt;title&gt;First website&lt;/title&gt;<br/>\r\n                    &emsp;&lt;head/&gt;<br/>\r\n                    &emsp;&lt;body&gt;<br/>\r\n                    &emsp;&emsp;&lt;img&emsp;<br/>\r\n                    &emsp;&emsp;&emsp;src=\r\n                </p>\r\n                <TextField\r\n                    value={srcValue} error={srcError} onChange={updateInput} variant=\"standard\" sx={{width: '65%'}} className=\"codeInputText\" id=\"changeableCode\" size=\"string\">\r\n                </TextField>\r\n                <p className=\"codeInputText\">\r\n                    <br/>&emsp;&emsp;&emsp;width=\r\n                </p>\r\n                <TextField\r\n                    value={widthValue} error={widthError} onChange={updateInput2} variant=\"standard\" sx={{width: '65%'}} className=\"codeInputText\" id=\"changeableCode\" size=\"string\">\r\n                </TextField>\r\n                <p className=\"codeInputText\">\r\n                    <br/>&emsp;&emsp;&emsp;height=\r\n                </p>\r\n                <TextField\r\n                    value={heightValue} error={heightError} onChange={updateInput3} variant=\"standard\" sx={{width: '65%'}} className=\"codeInputText\" id=\"changeableCode\" size=\"string\">\r\n                </TextField>\r\n                <p className=\"codeInputText\">\r\n                    <br/>&emsp;&emsp;&gt;<br/>\r\n                    &emsp;&lt;body/&gt; <br/>\r\n                    &lt;html/&gt;\r\n                </p>\r\n            </div>\r\n            <div id=\"result\">\r\n                {(srcError || widthError || heightError) ? <p id=\"errorText\">{srcErrorText + \"\\n\" + widthErrorText + \"\\n\" + heightErrorText}</p> : <img src={srcValue.substring(1,srcValue.length-1)} width={widthValue} height={heightValue}/>}\r\n            </div>\r\n            </div>\r\n            <p>Edit the attributes of the &lt;img&gt; tag on the left and see the result generated on the right change</p>\r\n        </Card>\r\n    )\r\n  }\r\n  \r\n  export default SandBox2;","import React, { useState, useEffect, useRef } from 'react';\r\nimport Card from '@mui/material/Card';\r\nimport List from '@mui/material/List';\r\nimport ListItem from '@mui/material/ListItem';\r\nimport Typography from '@mui/material/Typography';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport '../../App.css';\r\nimport './Tutorial.css';\r\nimport { Divider } from '@mui/material';\r\nimport SandBox from './SandBox';\r\nimport SandBox2 from './SandBox2';\r\n\r\nconst Step2 = (props) => {\r\n    const ref1 = React.createRef();\r\n    const ref2 = React.createRef();\r\n    const ref3 = React.createRef();\r\n    const ref4 = React.createRef();\r\n    const [stepRefs, setStepRefs] = useState([]);\r\n    useEffect(() => {\r\n        //console.log(ref1);\r\n        var tempList = [];\r\n        tempList[0] = ref1.current;\r\n        tempList[1] = ref2.current;\r\n        tempList[2] = ref3.current;\r\n        tempList[3] = ref4.current;\r\n        setStepRefs(tempList);\r\n    }, []);\r\n    useEffect(() => {\r\n        //console.log(ref1);\r\n        //console.log(\"Should be set now: \"+stepRefs[0]);\r\n        if (typeof(stepRefs[0]) != undefined) {\r\n            //console.log(\"hello??\");\r\n            props.setRefs(stepRefs);\r\n        }\r\n    }, [stepRefs]);\r\n    return (\r\n        <div className=\"pContainer stepContainer\">\r\n          <Typography variant=\"h4\" color=\"secondary.dark\" sx={{ mb: \"0.8em\"}}>\r\n          Step 2: Text, Links, and Images\r\n          </Typography>\r\n          <div id=\"2.1\" className=\"miniStep\" ref={ref1}>\r\n            <Typography variant=\"h5\" color=\"primary\">\r\n            2.1 Text tags\r\n            </Typography>\r\n            <div class=\"stepParagraph\">\r\n                <Typography variant=\"p\">\r\n                There are multiple tags for displaying text. &lt;p&gt; is used for standard-sized text, like what you're reading now.\r\n                Headers will use &lt;h1&gt;, &lt;h2&gt;, &lt;h3&gt;, &lt;h4&gt;, &lt;h5&gt;, or &lt;h6&gt; depending on the desired prominance/size\r\n                (h1 is the largest).\r\n                </Typography>\r\n            </div>\r\n            <div class=\"stepParagraph\">\r\n                <Typography variant=\"p\">\r\n                We can use &lt;br&gt; to make the text start a new line\r\n                (pressing enter in the html file will only change the way the file is displayed, not how it is rendered by the browser).\r\n                Multiple &lt;br&gt;s in a row will result in a multi-line gap in the text.\r\n                &lt;br&gt; will make a line break inside of a paragraph, but if you actually want to make separate pargraphs, \r\n                the best way to go about that is to split your text into multiple &lt;p&gt; paragraphs.\r\n                </Typography>\r\n            </div>\r\n            <div class=\"stepParagraph\">\r\n                <Typography variant=\"p\">\r\n                Any text between a &lt;b&gt; and &lt;/b&gt; will display as bold. Similarly, &lt;i&gt; will make your text italic and &lt;u&gt; will make it underlined.\r\n                </Typography>\r\n            </div>\r\n            <div class=\"stepParagraph\">\r\n                <Typography variant=\"p\">\r\n                Try out these tags in the code sandbox below! (change the code on the left to affect the result on the righ)\r\n                Make sure you match up all of your opening tags with closing tags.\r\n                Also, always close inner tags before closing outer ones (no overlaps).\r\n                The browser will probably parse this correctly anyway, but it isn't part of the official standard so there are no guarantees.\r\n                </Typography>\r\n            </div>\r\n            <SandBox/>\r\n          </div>\r\n          <Divider/>\r\n          <div id=\"2.2\" className=\"miniStep\" ref={ref2}>\r\n            <Typography variant=\"h5\" color=\"primary\">\r\n            2.2 Attributes\r\n            </Typography>\r\n            <div class=\"stepParagraph\">\r\n                <Typography variant=\"p\">\r\n                Tags can be customized by specifying attributes.\r\n                These will take the form &lt;tag attr=value&gt;.\r\n                If the tag uses opening and closing tags, you specify the attribute only in the opening tag.\r\n                If the attribute value is text (as opposed to e.g. a number), put it in quotes.\r\n                We'll see some examples of what this looks like later in this step of the tutorial.\r\n                </Typography>\r\n            </div>\r\n          </div>\r\n          <Divider/>\r\n          <div id=\"2.2\" className=\"miniStep\" ref={ref3}>\r\n            <Typography variant=\"h5\" color=\"primary\">\r\n            2.3 Images\r\n            </Typography>\r\n            <div class=\"stepParagraph\">\r\n                <Typography variant=\"p\">\r\n                You can use the &lt;img&gt; tag to add images to your website.\r\n                Image tags don't need a closing tag.\r\n                To specify the address of the link, use the src attribute in the tag.\r\n                To specifiy the width and height of the image, use the width and height attributes.\r\n                For example, &lt;img width=300&gt; will make the image have a width of 300 pixels.\r\n                </Typography>\r\n            </div>\r\n            <SandBox2/>\r\n          </div>\r\n          <Divider/>\r\n          <div id=\"2.4\" className=\"miniStep\"  ref={ref4}>\r\n            <Typography variant=\"h5\" color=\"primary\">\r\n            2.4 Links\r\n            </Typography>\r\n            <div class=\"stepParagraph\">\r\n                <Typography variant=\"p\">\r\n                You can add links to your webpage with the &lt;a&gt; tag.\r\n                To specifiy the address of the link, use the href attribute in the tag.\r\n                For example, &lt;a href=\"https://www.google.com/\"&gt;\r\n                </Typography>\r\n            </div>\r\n            <div class=\"stepParagraph\">\r\n                <Typography variant=\"p\">\r\n                If you put text between the &lt;a&gt; and the &lt;/a&gt;, clicking the text will take the user to the link address.\r\n                Similarly, you can make clickable images by wrapping a &lt;img&gt; tag with opening and closing &lt;a&gt; tags.\r\n                </Typography>\r\n            </div>\r\n          </div>\r\n        </div>\r\n    )\r\n  }\r\n  \r\n  export default Step2;","import React, { useState, useEffect, useRef } from 'react';\r\nimport Card from '@mui/material/Card';\r\nimport List from '@mui/material/List';\r\nimport ListItem from '@mui/material/ListItem';\r\nimport Typography from '@mui/material/Typography';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport '../../App.css';\r\nimport './Tutorial.css';\r\nimport { Divider } from '@mui/material';\r\n\r\nconst Step3 = (props) => {\r\n    const ref1 = React.createRef();\r\n    const ref2 = React.createRef();\r\n    const ref3 = React.createRef();\r\n    const ref4 = React.createRef();\r\n    const [stepRefs, setStepRefs] = useState([]);\r\n    useEffect(() => {\r\n        //console.log(ref1);\r\n        var tempList = [];\r\n        tempList[0] = ref1.current;\r\n        tempList[1] = ref2.current;\r\n        tempList[2] = ref3.current;\r\n        tempList[3] = ref4.current;\r\n        setStepRefs(tempList);\r\n    }, []);\r\n    useEffect(() => {\r\n        //console.log(ref1);\r\n        //console.log(\"Should be set now: \"+stepRefs[0]);\r\n        if (typeof(stepRefs[0]) != undefined) {\r\n            //console.log(\"hello??\");\r\n            props.setRefs(stepRefs);\r\n        }\r\n    }, [stepRefs]);\r\n    return (\r\n        <div className=\"pContainer stepContainer\">\r\n          <Typography variant=\"h4\" color=\"secondary.dark\" sx={{ mb: \"0.8em\"}}>\r\n          Step 3: Styling with CSS\r\n          </Typography>\r\n          <div id=\"3.1\" className=\"miniStep\" ref={ref1}>\r\n            <Typography variant=\"h5\" color=\"primary\">\r\n            3.1 Adding CSS\r\n            </Typography>\r\n            <div class=\"stepParagraph\">\r\n                <Typography variant=\"p\">\r\n                    You can use html tags to make your text bold, italic, or underlined, but what about <span id=\"fontChange\">changing the font? </span>\r\n                    <span id=\"colorChange\">Changing the text color? </span> <span id=\"bgChange\">Changing the background color?</span> You can acomplish these, and many more changes, with CSS.\r\n                    The first step to adding styling to your website is to create a CSS file.\r\n                    Name it ___.css, and put it in the same folder as your HTML file.\r\n                    (You can also put it somewhere else as long as you get the file path right.)\r\n                    In your HTML file, add \r\n                    &lt;link rel=\"stylesheet\" type=\"text/css\" href=\"yourFileName.css\"&gt;\r\n                    This tells the browser to display the HTML code using the styling information given in the CSS file yourFileName.css.\r\n                </Typography>\r\n            </div>\r\n            <div class=\"stepParagraph\">\r\n                <Typography variant=\"p\">\r\n                    In the CSS file you can choose properties that all elements with a certain tag should have (e.g. all p tags),\r\n                    all elements with a certain class should have, or the element with a certain id should have.\r\n                    You can specify a class or id for an element as an attribute. For example &lt;p class=\"blueText\" id=\"oceanDescription\"&gt;.\r\n                    Then, in the CSS file, you could specify that all p elements should have the font Times New Roman,\r\n                    all blueText elements should have the color blue, and the element oceanDescription should have a black background.\r\n                </Typography>\r\n            </div>\r\n          </div>\r\n          <Divider/>\r\n          <div id=\"3.2\" className=\"miniStep\"  ref={ref2}>\r\n            <Typography variant=\"h5\" color=\"primary\">\r\n            3.2 Font and color\r\n            </Typography>\r\n            <div class=\"stepParagraph\">\r\n                <Typography variant=\"p\">\r\n                The CSS properties we need to do this are font-family, color, and background-color.\r\n                (Multi-word CSS properties usually have a hyphen between words)\r\n                The CSS code will look like this:\r\n                </Typography>\r\n            </div>\r\n            <Card id=\"exampleContainer\">\r\n                <div class=\"codeExample\">\r\n                    <p className=\"codeExampleText\">\r\n                        p &#123;<br/>\r\n                        &emsp;font-family: \"Times New Roman\";<br/>\r\n                        &#125;<br/>\r\n                        <br/>\r\n                        .blueText &#123;<br/>\r\n                        &emsp;color: blue;<br/>\r\n                        &#125;<br/>\r\n                        <br/>\r\n                        #oceanDescription &#123;<br/>\r\n                        &emsp;background-color: black;<br/>\r\n                        &#125;<br/>\r\n                    </p>\r\n                </div>\r\n                <Typography variant=\"p\" id=\"exampleLabel\">\r\n                A simple example CSS file\r\n                </Typography>\r\n            </Card>\r\n            <div class=\"stepParagraph\">\r\n                <Typography variant=\"p\">\r\n                    Refer to classes by putting a dot before the name and ids by putting a # before the name.\r\n                    The font name needs to be in quotes, but the colors don't.\r\n                    If we wanted to use a color besides the built-in ones, we can specify it exactly with a hex value (e.g. #2ac754).\r\n                    I find <a href=\"https://g.co/kgs/jcYpBq\">this color picker</a> very useful for choosing colors and getting their hex values.\r\n                    TODO add citation for html and css aren't programming languages\r\n                </Typography>\r\n            </div>\r\n          </div>\r\n          <Divider/>\r\n          <div id=\"3.3\" className=\"miniStep\" ref={ref3}>\r\n            <Typography variant=\"h5\" color=\"primary\">\r\n            3.3 Divs\r\n            </Typography>\r\n            <div class=\"stepParagraph\">\r\n                <Typography variant=\"p\">\r\n                Sed id sodales dui, at placerat mi. Mauris pharetra bibendum laoreet. Quisque eget dolor purus.\r\n                Quisque sollicitudin fringilla eros, id cursus orci ullamcorper ac. Quisque fringilla vitae erat nec sodales. \r\n                Phasellus a leo in arcu aliquet condimentum. Mauris rutrum enim eget imperdiet placerat. \r\n                Morbi ultrices massa urna, at cursus eros varius auctor.\r\n                Nunc volutpat turpis at vulputate placerat. Cras neque quam, dignissim eget urna sed, mollis tempus quam.\r\n                </Typography>\r\n            </div>\r\n            <div class=\"stepParagraph\">\r\n                <Typography variant=\"p\">\r\n                Sed id sodales dui, at placerat mi. Mauris pharetra bibendum laoreet. Quisque eget dolor purus.\r\n                Quisque sollicitudin fringilla eros, id cursus orci ullamcorper ac. Quisque fringilla vitae erat nec sodales. \r\n                Phasellus a leo in arcu aliquet condimentum. Mauris rutrum enim eget imperdiet placerat. \r\n                Morbi ultrices massa urna, at cursus eros varius auctor.\r\n                Nunc volutpat turpis at vulputate placerat. Cras neque quam, dignissim eget urna sed, mollis tempus quam.\r\n                </Typography>\r\n            </div>\r\n            <div class=\"stepParagraph\">\r\n                <Typography variant=\"p\">\r\n                Sed id sodales dui, at placerat mi. Mauris pharetra bibendum laoreet. Quisque eget dolor purus.\r\n                Quisque sollicitudin fringilla eros, id cursus orci ullamcorper ac. Quisque fringilla vitae erat nec sodales. \r\n                Phasellus a leo in arcu aliquet condimentum. Mauris rutrum enim eget imperdiet placerat. \r\n                Morbi ultrices massa urna, at cursus eros varius auctor.\r\n                Nunc volutpat turpis at vulputate placerat. Cras neque quam, dignissim eget urna sed, mollis tempus quam.\r\n                </Typography>\r\n            </div>\r\n            <div class=\"stepParagraph\">\r\n                <Typography variant=\"p\">\r\n                Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aliquam nisl augue, venenatis vitae consequat vel, scelerisque ac neque. \r\n                Nunc ut quam dignissim, malesuada lectus eget, posuere turpis. Nulla facilisis odio sit amet posuere rhoncus. Praesent vel varius urna. \r\n                Sed porta, nisl a vestibulum porta, turpis dolor vulputate ligula, vitae rhoncus leo tortor nec lectus. \r\n                Nulla pharetra placerat enim eget volutpat. \r\n                Nulla convallis elementum elit, at commodo sapien. Ut iaculis accumsan erat at auctor. Sed porttitor orci dignissim malesuada dapibus.\r\n                </Typography>\r\n            </div>\r\n          </div>\r\n          <div id=\"3.4\" className=\"miniStep\" ref={ref4}>\r\n            <Typography variant=\"h5\" color=\"primary\">\r\n            3.4\r\n            </Typography>\r\n            <div class=\"stepParagraph\">\r\n                <Typography variant=\"p\">\r\n                Sed id sodales dui, at placerat mi. Mauris pharetra bibendum laoreet. Quisque eget dolor purus.\r\n                Quisque sollicitudin fringilla eros, id cursus orci ullamcorper ac. Quisque fringilla vitae erat nec sodales. \r\n                Phasellus a leo in arcu aliquet condimentum. Mauris rutrum enim eget imperdiet placerat. \r\n                Morbi ultrices massa urna, at cursus eros varius auctor.\r\n                Nunc volutpat turpis at vulputate placerat. Cras neque quam, dignissim eget urna sed, mollis tempus quam.\r\n                </Typography>\r\n            </div>\r\n            <div class=\"stepParagraph\">\r\n                <Typography variant=\"p\">\r\n                Sed id sodales dui, at placerat mi. Mauris pharetra bibendum laoreet. Quisque eget dolor purus.\r\n                Quisque sollicitudin fringilla eros, id cursus orci ullamcorper ac. Quisque fringilla vitae erat nec sodales. \r\n                Phasellus a leo in arcu aliquet condimentum. Mauris rutrum enim eget imperdiet placerat. \r\n                Morbi ultrices massa urna, at cursus eros varius auctor.\r\n                Nunc volutpat turpis at vulputate placerat. Cras neque quam, dignissim eget urna sed, mollis tempus quam.\r\n                </Typography>\r\n            </div>\r\n            <div class=\"stepParagraph\">\r\n                <Typography variant=\"p\">\r\n                Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aliquam nisl augue, venenatis vitae consequat vel, scelerisque ac neque. \r\n                Nunc ut quam dignissim, malesuada lectus eget, posuere turpis. Nulla facilisis odio sit amet posuere rhoncus. Praesent vel varius urna. \r\n                Sed porta, nisl a vestibulum porta, turpis dolor vulputate ligula, vitae rhoncus leo tortor nec lectus. \r\n                Nulla pharetra placerat enim eget volutpat. \r\n                Nulla convallis elementum elit, at commodo sapien. Ut iaculis accumsan erat at auctor. Sed porttitor orci dignissim malesuada dapibus.\r\n                </Typography>\r\n            </div>\r\n          </div>\r\n        </div>\r\n    )\r\n  }\r\n  \r\n  export default Step3;","import React, { useState, useEffect } from 'react';\r\nimport Card from '@mui/material/Card';\r\nimport List from '@mui/material/List';\r\nimport ListItem from '@mui/material/ListItem';\r\nimport Typography from '@mui/material/Typography';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport '../../App.css';\r\nimport './Tutorial.css';\r\nimport TutorialDrawer from './TutorialDrawer';\r\nimport Step1 from './Step1';\r\nimport Step2 from './Step2';\r\nimport Step3 from './Step3';\r\n\r\nconst Tutorial = () => {\r\n    const [selectedStep, setSelectedStep] = useState({id: 0, component: <div/>, refs: null});\r\n    const changeStep = (newId) => {\r\n      console.log(\"Trying to change step\");\r\n      //console.log(\"Before: \"+selectedStep.refs);\r\n      if (newId ==0) {\r\n        setSelectedStep({...selectedStep, id: newId, component: <Step1/>});\r\n      } else if (newId == 1) {\r\n        setSelectedStep({...selectedStep, id: newId, component: <Step2/>});\r\n      } if (newId == 2) {\r\n        setSelectedStep({...selectedStep, id: newId, component: <Step3/>});\r\n      }\r\n      //console.log(selectedStep.component);\r\n      //console.log(\"After: \"+selectedStep.refs);\r\n    }\r\n    const setRefs = (newRefs) => {\r\n      //console.log(\"Hello????\");\r\n      console.log(\"Trying to set\");\r\n      console.log(newRefs);\r\n      setSelectedStep({...selectedStep, refs: newRefs});\r\n      //console.log(\"Setting refs\");\r\n    }\r\n    const scrollToStep = (id, stepNum) => {\r\n      console.log(\"Trying to scroll\");\r\n      console.log(selectedStep.refs);\r\n      //console.log(stepNum);\r\n      selectedStep.refs[stepNum].scrollIntoView({ behavior: 'smooth' });\r\n    }\r\n    useEffect(() => {  \r\n      changeStep(0);\r\n    },[]);\r\n    return (\r\n      <div id=\"tutorialMainDiv\">\r\n        <TutorialDrawer clickFunction={changeStep} scrollFunction={scrollToStep} selectedId={selectedStep.id}/>\r\n        {/*selectedStep.component*/}\r\n        {React.cloneElement(\r\n          selectedStep.component, \r\n          { setRefs: setRefs }\r\n        )}\r\n      </div>\r\n    )\r\n  }\r\n  \r\n  export default Tutorial;","import React from 'react';\r\nimport { Divider } from '@mui/material';\r\nimport Typography from '@mui/material/Typography';\r\nimport '../App.css';\r\n\r\nconst Links = () => {\r\n    return (\r\n      <div className=\"pContainer\">\r\n          <Typography variant=\"h4\" color=\"secondary.dark\" sx={{ mb: \"0.8em\"}}>\r\n          Resources\r\n          </Typography>\r\n          <div class=\"stepParagraph\">\r\n                <Typography variant=\"p\">\r\n                There are many resources on the internet that can help you learn more about web development.\r\n          These are a few of my favorites that I think would be helpful after completing this tutorial, but I encourage you look for others as well.\r\n          All of these resources are free. Find something that fits your goals and favorite learning format!</Typography>\r\n            </div>\r\n          <div className=\"miniStep\">\r\n            <Typography variant=\"h5\" color=\"primary\">\r\n            Expanding your HTML/CSS knowledge\r\n            </Typography>\r\n            <div class=\"stepParagraph\">\r\n                <Typography variant=\"p\">\r\n                  <a href=\"https://www.khanacademy.org/computing/computer-programming/html-css\" target=\"_blank\">This Khan Academy course</a> is a great\r\n                  way to continue learning HTML and CSS. I used it when I was first learning web development, and it helped me a lot.\r\n                  The beginning of the course will have some overlap with what's in this tutorial, but it also has plenty of information that\r\n                  was outside of the scope of this tutorial. Khan Academy also has their own sandbox feature that you can use to practice creating websites.\r\n                  You can make any projects you want with it, but I would also encourage doing the project challenges that are included in the course, \r\n                  since they do a good job of making sure you're learning the content.\r\n                </Typography>\r\n            </div>\r\n            <div class=\"stepParagraph\">\r\n                <Typography variant=\"p\">\r\n                  <a href=\"https://www.codecademy.com/learn/learn-html\" target=\"_blank\">This codecademy course</a> also teaches an introduction to web development\r\n                  with HTML. I haven't used this particular course, but I've had great experiences with other codecademy courses.\r\n                  Unlike Khan Academy courses, which have a mix of videos, articles, exercises, and projects, codecademy courses are built of \r\n                  short articles with frequent challenges. If you don't like the video format, I would recommend this course instead of the Khan Academy one.\r\n                  Codecademy also has other web development courses which are only available with a (paid) pro membership.\r\n                  I haven't taken any of the pro courses since there are so many amazing free resources out there,\r\n                  but if you really like this course, you might want to consider trying one of the pro-only web development courses.\r\n                </Typography>\r\n            </div>\r\n          </div>\r\n          <Divider/>\r\n          <div className=\"miniStep\">\r\n            <Typography variant=\"h5\" color=\"primary\">\r\n            Adding JavaScript\r\n            </Typography>\r\n            <div class=\"stepParagraph\">\r\n                <Typography variant=\"p\">\r\n<a href=\"https://www.codecademy.com/catalog/language/javascript\" target=\"_blank\">This codecademy course</a> is a great way to learn JavaScript.\r\n                I used it when I was first learning the language. It doesn't cover web development at all, \r\n                but it's a good idea to get familiar with JavaScript before you start using it in your websites.\r\n                This is especially true if you don't have much experience with programming, since JavaScript has a lot more in common with \r\n                Java, C++, or Python than it does with HTML or CSS, which are by most formal definitions not even programming languages.\r\n                </Typography>\r\n            </div>\r\n            <div class=\"stepParagraph\">\r\n                <Typography variant=\"p\">\r\n                <a href=\"https://www.khanacademy.org/computing/computer-programming/html-css-js\" target=\"_blank\">This Khan Academy Course</a> is great for learning\r\n                how to use JavaScript with the HTML and CSS you've already learned to make interactive websites. It is similar in structure to\r\n                the other Khan Academy course, so if you tried that one and liked it you'll probably also like this one.\r\n                This course isn't an intro to JavaScript, although Khan Academy does have a course fitting that description (Intro to JS: Drawing and Animation).\r\n                I wouldn't recommend that course to someone trying to learn JavaScript for web development since most of it is dedicated to \r\n                making visual and interactive processing.js programs, but it is a great course in general if that's something you're interested in.\r\n                </Typography>\r\n            </div>\r\n          </div>\r\n          <Divider/>\r\n          <div className=\"miniStep\">\r\n            <Typography variant=\"h5\" color=\"primary\">\r\n            Quick reference\r\n            </Typography>\r\n            <div class=\"stepParagraph\">\r\n                <Typography variant=\"p\">\r\n                <a href=\"https://www.geeksforgeeks.org/html-brgt-tag/\" target=\"_blank\">Geeks4geeks</a> and <a href=\"https://www.w3schools.com/tags/tag_br.asp\" target=\"_blank\">w3schools</a> both are\r\n                great for looking up the details of a specific hmtl tag or css property. Although they do have tutorials, I find that they are mostly useful for \r\n                looking up something specific, and often I end up on one after a Google search rather than by specifically pulling up the site.\r\n                The login popup on Geeks4Geeks only appears with an 'x' in certain browsers, so I recommend using Chrome if you don't want to make an account.\r\n                I've linked each of their pages on &lt;br&gt;, since that's something we covered in this tutorial.\r\n                You can compare them to see if you prefer the format of one or the other.\r\n                </Typography>\r\n            </div>\r\n            <div class=\"stepParagraph\">\r\n                <Typography variant=\"p\">\r\n                Flexbox makes controlling the placement of items in your page much easier.\r\n                This <a href=\"https://css-tricks.com/snippets/css/a-guide-to-flexbox/\" target=\"_blank\">Flexbox cheatsheet</a> is useful for learning\r\n                to use Flexbox and for checking a forgotten keyword etc. I often have this open in a tab when I'm working on a web development project.\r\n                </Typography>\r\n            </div>\r\n          </div>\r\n          <Divider/>\r\n          <div className=\"miniStep\">\r\n            <Typography variant=\"h5\" color=\"primary\">\r\n            Beyond HTML, CSS, and JavaScript\r\n            </Typography>\r\n            <div class=\"stepParagraph\">\r\n                <Typography variant=\"p\">\r\n                <a href=\"https://www.youtube.com/watch?v=w7ejDZ8SWv8\" target=\"_blank\">This React youtube tutorial</a> is a great way to get started with React.js. \r\n                That's one that I used when I was first starting, but there are many others on youtube.\r\n                Sometimes information can get out of date, so depending on how long it's been since this list was updated (11/15/21), you might be better\r\n                off with a more recent tutorial.\r\n                </Typography>\r\n            </div>\r\n          </div>\r\n      </div>\r\n    )\r\n  }\r\n  \r\n  export default Links;","import AppBar from '@mui/material/AppBar';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport Typography from '@mui/material/Typography';\r\nimport Button from '@mui/material/Button';\r\nimport { makeStyles } from '@mui/material/styles';\r\nimport '../App.css';\r\nimport './NavBar.css';\r\nimport React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\n/*const useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      flexGrow: 1,\r\n    },\r\n    menuButton: {\r\n      marginRight: theme.spacing(2),\r\n    },\r\n    myToolBar: {\r\n      justifyContent: \"space-between\",\r\n    },\r\n  }));*/\r\n\r\nconst NavBar = ({}) => {\r\n    //const classes = useStyles();\r\n    return (\r\n            <AppBar position=\"static\" className=\"appbar\">\r\n            <Toolbar className=\"myToolBar\">\r\n                <Typography variant=\"h5\" className=\"myName\" color=\"#fffff\">\r\n                Learn to make a website!\r\n                </Typography>\r\n                <div className=\"navButtons\">\r\n                    <Button color=\"inherit\" component={Link} to={'/website-tutorial/'}>Tutorial</Button>\r\n                    <Button color=\"inherit\" component={Link} to={'/website-tutorial/about'}>About</Button>\r\n                    <Button color=\"inherit\" component={Link} to={'/website-tutorial/links'}>Resources</Button>\r\n                    <Button color=\"inherit\" component={Link} to={'/website-tutorial/critique'}>Critique</Button>\r\n                </div>\r\n            </Toolbar>\r\n        </AppBar>\r\n    )\r\n}\r\n\r\nexport default NavBar;","import { createTheme } from '@mui/material/styles';\r\nimport { cyan } from '@mui/material/colors';\r\n\r\nconst myTheme = createTheme({\r\n    palette: {\r\n        primary: {\r\n            main: cyan[500],\r\n            contrastText: cyan[50],\r\n        },\r\n        secondary: {\r\n          main: '#ffe082',\r\n        },\r\n    },\r\n});\r\n\r\nexport default myTheme;","import logo from './logo.svg';\nimport './App.css';\nimport About from './components/About';\nimport Critique from './components/Critique';\nimport Tutorial from './components/Tutorial/Tutorial';\nimport Links from './components/Links';\nimport NavBar from './components/NavBar';\nimport myTheme from './components/myTheme';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport { ThemeProvider } from '@mui/material/styles';\n\nfunction App() {\n  return (\n    <ThemeProvider theme={myTheme}>\n      <Router>\n        <div className=\"App\" >\n          <div className=\"mainContainer\">\n            <NavBar/>\n            <div className=\"content\">\n              <Route path=\"/website-tutorial/\" exact component={Tutorial} />\n              <Route path=\"/website-tutorial/about\" exact component={About} />\n              <Route path=\"/website-tutorial/links\" exact component={Links} />\n              <Route path=\"/website-tutorial/critique\" exact component={Critique} />\n            </div>\n          </div>\n        </div>\n      </Router>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}